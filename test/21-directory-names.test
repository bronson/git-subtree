# Ensure we can merge into some crazily named directories

# exec 2>&1; set -x

. $MYDIR/utilities.sh

MKDIR dir

set_up_a_repo_and_one_upstream


directories=\
"big dir
or   der
\$\$
\"dot\"
--argument
-dot's
!
\$!
  "

# Add the subtree
cd "$dir/proj"

git-subtree add "file://$dir/upstream"
git-subtree fetch upstream

IFS=  # otherwise bash would eat the all-whitespace directory
while read -r name; do
  echo "merge to '$name'"
  baddir="$dir/proj/$name"
  mkdir -p "$baddir"
  cd "$baddir"
  git-subtree merge "upstream/master"
  git-subtree branch
done <<EOL
$directories
EOL

echo "try a list just for good measure"
git-subtree list


cd "$dir/proj"
echo ".git-subtrees:"
cat .git-subtrees | sed -e 's/^/  /'


cd "$dir"
rm -rf upstream proj

STDOUT:
merge to 'big dir'
* master
merge to 'or   der'
* master
merge to '$$'
* master
merge to '"dot"'
* master
merge to '--argument'
* master
merge to '-dot's'
* master
merge to '!'
* master
merge to '$!'
* master
merge to '  '
* master
try a list just for good measure
  big dir
  or   der
  $$
  "dot"
  --argument
  -dot's
  !
  $!
    
.git-subtrees:
  # generated by git-subtree, do not edit!
  # (the left column tells the directory that received the merge,
  # the right column names the branch or ref that was merged into it)
  
  "big dir" upstream/master
  "or   der" upstream/master
  "\$\$" upstream/master
  "\"dot\"" upstream/master
  --argument upstream/master
  "-dot's" upstream/master
  "!" upstream/master
  "\$!" upstream/master
  "  " upstream/master
