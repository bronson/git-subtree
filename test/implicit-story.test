# This test calls subtree commands but doesn't name the remote
# explicitly, the script determines it implicitly from the cwd.

# TODO: fix merge so it always accepts dest relative to the cwd
# TODO: add a checkout command to switch the branch your subtree is on?
# TODO: switch to using a branch rather than a squash
# TODO: add a --no-commit option to clone, pull and merge.
# TODO: automatically commit the results after merging
# TODO: Make pull and merge remember the branch we're on somehow?

# exec 2>&1; set -x

. $MYDIR/utilities.sh

MKDIR dir

# set up the test repos
create_repo "$dir/proj"
commit_new_file "$dir/proj" "tempfile" "add meaningless tempfile to create a first commit"
create_repo "$dir/upstream"
commit_new_file "$dir/upstream" "upstream-1"
commit_new_file "$dir/upstream" "upstream-2"

# Add the subtree
cd "$dir/proj"
git-subtree clone "file://$dir/upstream"
# TODO: this commit needs to disappear
git commit -q -m "add upstream subtree"

# another commit appears upstream
commit_new_file "$dir/upstream" "upstream-3"

cd upstream
git-subtree pull master
git commit -q -m "update upstream subtree"

echo "COMMITS:"
git log --pretty=tformat:%s
echo "FILES:"
cd "$dir/proj"
find . -name .git -prune -o -print

cd "$dir"
rm -rf upstream proj

STDOUT:
COMMITS:
update upstream subtree
add upstream subtree
add meaningless tempfile to create a first commit
FILES:
.
./tempfile
./upstream
./upstream/upstream-3
./upstream/upstream-2
./upstream/upstream-1
