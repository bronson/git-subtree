# Ensures that we show the correct branch, even when there are other
# branches at the same commit.  Tests some pretty pathological branch
# names.

. $MYDIR/utilities.sh

MKDIR dir

# set up the test repos
create_repo "$dir/proj"
commit_new_file "$dir/proj" "tempfile" "add meaningless tempfile to create a first commit"
create_repo "$dir/upstream"
commit_new_file "$dir/upstream" "upstream-1"
cd "$dir/upstream"

git checkout -q -b branch
git checkout -q -b branches/1
git checkout -q -b branches/$
git checkout -q -b d.\"dot\"
git checkout -q -b -dot\'s
git checkout -q -b \!
git checkout -q -b \$\!

# Add the subtree
cd "$dir/proj"

git-subtree clone "file://$dir/upstream" branch
git commit -q -m "add upstream subtree"

cd upstream
echo "initial branch:"
git-subtree branch

echo "merge branches/1"
git-subtree merge upstream/branches/1
git-subtree branch

echo 'merge branches/$'
git-subtree merge 'upstream/branches/$'
git-subtree branch

echo merge d.\"dot\"
git-subtree merge upstream/d.\"dot\"
git-subtree branch

echo merge -dot\'s
git-subtree merge upstream/-dot\'s
git-subtree branch

echo merge \!
git-subtree merge upstream/\!
git-subtree branch

echo merge \$\!
git-subtree merge upstream/\$\!
git-subtree branch


cd "$dir/proj"
echo ".git-subtrees:"
cat .git-subtrees | sed -e 's/^/  /'

cd "$dir"
rm -rf upstream proj

STDOUT:
initial branch:
  !
  $!
  -dot's
* branch
  branches/$
  branches/1
  d."dot"
  master
merge branches/1
  !
  $!
  -dot's
  branch
  branches/$
* branches/1
  d."dot"
  master
merge branches/$
  !
  $!
  -dot's
  branch
* branches/$
  branches/1
  d."dot"
  master
merge d."dot"
  !
  $!
  -dot's
  branch
  branches/$
  branches/1
* d."dot"
  master
merge -dot's
  !
  $!
* -dot's
  branch
  branches/$
  branches/1
  d."dot"
  master
merge !
* !
  $!
  -dot's
  branch
  branches/$
  branches/1
  d."dot"
  master
merge $!
  !
* $!
  -dot's
  branch
  branches/$
  branches/1
  d."dot"
  master
.git-subtrees:
  # generated by git-subtree, do not edit!
  # (the left column tells the directory that received the merge,
  # the right column names the branch or ref that was merged into it)
  upstream "upstream/\$!"
