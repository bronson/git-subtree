# Ensures that we show the correct branch, even when there are other
# branches at the same commit.  Using some pretty pathological branch
# names.

. $MYDIR/utilities.sh

MKDIR dir

# set up the test repos
create_repo "$dir/proj"
commit_new_file "$dir/proj" "tempfile" "add meaningless tempfile to create a first commit"
create_repo "$dir/upstream"
commit_new_file "$dir/upstream" "upstream-1"
cd "$dir/upstream"

git checkout -q -b branch
git checkout -q -b branches/1
git checkout -q -b branches/$
git checkout -q -b d.\"dot\"

# Add the subtree
cd "$dir/proj"

git-subtree clone "file://$dir/upstream" branch
git commit -q -m "add upstream subtree"

cd upstream
echo "initial branch:"
git-subtree branch

echo "switch /1"
git-subtree merge upstream/branches/1
git-subtree branch
echo 'switch /$'
git-subtree merge 'upstream/branches/$'
git-subtree branch
echo switch d.\"dot\"
git-subtree merge upstream/d.\"dot\"
git-subtree branch

cd "$dir/proj"
echo ".git-subtrees:"
cat .git-subtrees | sed -e 's/^/  /'

cd "$dir"
rm -rf upstream proj

STDOUT:
initial branch:
* branch
  branches/$
  branches/1
  d."dot"
  master
switch /1
  branch
  branches/$
* branches/1
  d."dot"
  master
switch /$
  branch
* branches/$
  branches/1
  d."dot"
  master
switch d."dot"
  branch
  branches/$
  branches/1
* d."dot"
  master
.git-subtrees:
  # generated by git-subtree, do not edit!
  upstream "upstream/d.\"dot\""
