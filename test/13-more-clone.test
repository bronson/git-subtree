# This test calls clone in various odd ways trying to confuse it.

# exec 2>&1; set -x

. $MYDIR/utilities.sh

MKDIR dir

create_repo "$dir/proj"
commit_new_file "$dir/proj" "tempfile"
create_repo "$dir/upstream-1"
commit_new_file "$dir/upstream-1" "upstream-1-1"
create_repo "$dir/upstream-2"
commit_new_file "$dir/upstream-2" "upstream-2-1"

cd "$dir/proj"

git-subtree clone "file://$dir/upstream-1" master "--" upremote
# TODO: this commit needs to disappear
git commit -q -m "add upstream subtree"
echo "contents of crazy double-dash dir:"
(cd -- --; find . -type f | sort)

# there was a bug where multiple spaces would get squashed into one
git-subtree clone "file://$dir/upstream-2" master "o   p" up2rem
# TODO: this commit needs to disappear
git commit -q -m "add upstream subtree"
echo "contents of crazy multi space dir:"
(find "o   p" -type f | sort)
echo "contents of .git-subtrees:"
cat .git-subtrees

# make sure all files are checked in
git ls-files -o -m

# and clean up
cd "$dir"
rm -rf upstream-1 upstream-2 proj

STDOUT:
contents of crazy double-dash dir:
./upstream-1-1
contents of crazy multi space dir:
o   p/upstream-2-1
contents of .git-subtrees:
# generated by git-subtree, do not edit!
# (the left column tells the directory that received the merge,
# the right column names the branch or ref that was merged into it)

-- upremote/master
"o   p" up2rem/master
