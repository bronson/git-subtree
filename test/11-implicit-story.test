# This test tries to do everything as tersley as possible (clone and
# pull instead of add, merge, fetch, merge).  It does it all on the
# default master branch.

# See 'longhand' for this test using the lower level commands.
# See 'implicit-branch' for this test but on a different checkout

# TODO: write implicit-branch test, including subtree merge fixes
# TODO: make merge accept a plain branch name as well as a full RTB.
# TODO: make merge accept a tag
# TODO: make merge accept a sha1
# TODO: make merge look up previous branch if not supplied
# TODO: test what happens when you add a subtree that already has been added
# TODO: automatically commit the results after merging
# TODO: add a --no-commit option to clone, pull and merge.
# TODO: ensure that merging to a tag and maybe a specific sha1 work too.

# exec 2>&1; set -x

. $MYDIR/utilities.sh

MKDIR dir

set_up_a_repo_and_one_upstream
commit_new_file "$dir/upstream" "upstream-2"

# Add the subtree
cd "$dir/proj"

git-subtree clone "file://$dir/upstream"
# TODO: this commit needs to disappear
git commit -q -m "add upstream subtree"

# another commit appears upstream
commit_new_file "$dir/upstream" "upstream-3"

cd "$dir/proj/upstream"
git-subtree pull
git commit -q -m "update upstream subtree"

cd "$dir/proj"
# make sure all files are checked in
git ls-files -o -m

echo "BRANCH: "
cd upstream
git-subtree branch 2>&1
cd ..
echo "COMMITS (unordered):"
git log --pretty=tformat:%s | sort
echo "FILES:"
cd "$dir/proj"
find . -name .git -prune -o -type f -print | sort
echo ".git-subtrees:"
cat .git-subtrees

cd "$dir"
rm -rf upstream proj

STDOUT:
BRANCH: 
* master
COMMITS (unordered):
add upstream subtree
commit_new_file: create tempfile
commit_new_file: create upstream-1
commit_new_file: create upstream-2
commit_new_file: create upstream-3
update upstream subtree
FILES:
./.git-subtrees
./tempfile
./upstream/upstream-1
./upstream/upstream-2
./upstream/upstream-3
.git-subtrees:
# generated by git-subtree, do not edit!
# (the left column tells the directory that received the merge,
# the right column names the branch or ref that was merged into it)
upstream upstream/master
