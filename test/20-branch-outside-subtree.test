# Ensure that we print something sensible if the user calls subtree branch
# outside of a subtree.

. $MYDIR/utilities.sh

MKDIR dir

set_up_a_repo_and_one_upstream
commit_new_file "$dir/upstream" "upstream-2"

# try to add the subtree to the empty repo
# need to check every method that adds a subtree
cd "$dir/proj"

echo "no subtrees:" >&2
mkdir nonbranchdir
git-subtree branch nonbranchdir
[ "$?" = "0" ] && echo "WTF, it exited normally?"

git-subtree clone "file://$dir/upstream"

echo >&2
echo "some branches:" >&2
git-subtree branch
[ "$?" = "0" ] && echo "WTF, it exited normally?"

git-subtree branch nondir
[ "$?" = "0" ] && echo "WTF, it exited normally?"

git-subtree branch nonbranchdir
[ "$?" = "0" ] && echo "WTF, it exited normally?"

cd nonbranchdir
mkdir subdir
cd subdir
git-subtree branch
[ "$?" = "0" ] && echo "WTF, it exited normally?"

# and, just to sanity check, this should succeed
# and print "upstream/master" on stdout.
cd "$dir/proj/upstream"
git-subtree branch

rm -rf "$dir/proj" "$dir/upstream"

STDERR:
no subtrees:
this repo doesn't have any subtrees.

some branches:
please specify a subtree.
could not find nondir in known subtrees.
could not find nonbranchdir in known subtrees.
could not find nonbranchdir/subdir in known subtrees.
STDOUT:
* master
