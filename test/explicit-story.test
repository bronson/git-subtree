# This test calls subtree commands with explicit paths and branch names

# exec 2>&1; set -x

. $MYDIR/utilities.sh

MKDIR dir

# set up the test repos
create_repo "$dir/proj"
commit_new_file "$dir/proj" "tempfile" "add meaningless tempfile to create a first commit"
create_repo "$dir/upstream"
commit_new_file "$dir/upstream" "upstream-1"
cd "$dir/upstream"
git checkout -q -b upbranch
commit_new_file "$dir/upstream" "upstream-2"

# add and merge the upstream subtree
cd "$dir/proj"
git-subtree clone "file://$dir/upstream" upbranch updir/upstream upremote
git commit -q -m "add upstream subtree"

# another commit appears upstream
commit_new_file "$dir/upstream" "upstream-3"

# fetch the objects into our project
git fetch -q upremote >/dev/null 2>&1
echo "DIFF:"
# suppress the last "index 0000000..e69de29" line
git-subtree diff upremote/upbranch | head -n -1
git-subtree merge upremote/upbranch updir/upstream
git commit -q -m "update upstream subtree"

echo "COMMITS:"
git log --pretty=tformat:%s
echo "FILES:"
find updir -type f -print

cd "$dir"
rm -rf upstream proj

STDOUT:
DIFF:
diff --git a/upstream-3 b/upstream-3
new file mode 100644
COMMITS:
update upstream subtree
add upstream subtree
commit_new_file: create upstream-3
add meaningless tempfile to create a first commit
commit_new_file: create upstream-2
commit_new_file: create upstream-1
FILES:
updir/upstream/upstream-3
updir/upstream/upstream-2
updir/upstream/upstream-1
